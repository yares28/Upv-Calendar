/* Landing Page Specific Styles */

// Import global variables/mixins if needed (optional)
// @import '../../styles/variables'; 

// Use :host to scope styles to this component
:host {
  display: block; // Ensures the component takes up space
}

// Header Styles
.landing-header {
  background-color: var(--card-background-color);
  color: var(--text-color);
  box-shadow: 0 2px 4px var(--card-shadow-color);
  padding: 0.75rem 1.5rem;
  border-bottom: 1px solid var(--border-color);
  position: sticky; // Make header sticky
  top: 0;
  z-index: 1000; // Ensure header stays on top
  transition: background-color var(--transition-speed), border-color var(--transition-speed);

  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
  }

  .logo-container {
    display: flex;
    align-items: center;
    gap: 0.75rem;

    .logo {
      height: 30px;
      width: auto;
      // Apply filter for dark mode if needed, e.g., invert
      html[data-theme="dark"] & {
        filter: invert(1) hue-rotate(180deg); // Example: makes logo visible on dark bg
      }
    }

    .header-title {
      font-size: 1.25rem;
    font-weight: 600;
      color: var(--text-color);
    }
  }

  .header-nav {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .nav-button, .theme-toggle {
    background-color: transparent;
    color: var(--text-muted-color);
    border: 1px solid var(--border-color);
    padding: 0.5rem 1rem;
    border-radius: var(--border-radius);
    cursor: pointer;
    font-size: 0.9rem;
    transition: background-color var(--transition-speed), color var(--transition-speed), border-color var(--transition-speed);
    display: inline-flex; // For aligning icon/text if needed
    align-items: center;
    justify-content: center;
    
    &:hover {
      background-color: var(--secondary-color);
      color: var(--text-color);
      border-color: var(--text-muted-color);
    }
  }
  
  .theme-toggle {
      padding: 0.5rem; // Make it square-ish
      svg {
          stroke: var(--text-muted-color); // Make icon color match theme
          transition: stroke var(--transition-speed);
      }
       &:hover svg {
            stroke: var(--text-color);
       }
  }
}

// Main Content Area
.landing-main {
  padding: 2rem 1.5rem;
  background-color: var(--background-color);
}

// Hero Section
.hero-section {
  background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
  color: var(--button-text-color); // Use button text color for high contrast
  padding: 4rem 2rem;
  text-align: center;
  border-radius: 8px;
  margin-bottom: 2rem;
  display: flex; // Use flex to center content vertically
  justify-content: center;
    align-items: center;
  min-height: 30vh;
  box-shadow: inset 0 0 20px rgba(0,0,0,0.2); // Inner shadow for depth

  .hero-content {
    max-width: 700px;
  }

  h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    text-shadow: 1px 1px 3px rgba(0,0,0,0.3);
  }

  .subtitle {
    font-size: 1.2rem;
    margin-bottom: 1.5rem;
    opacity: 0.9;
  }

  .cta-button {
    background-color: var(--background-color);
    color: var(--primary-color);
    padding: 0.8rem 2rem;
    font-size: 1.1rem;
    font-weight: 600;
    border-radius: 50px; // Pill shape
    border: none;
    cursor: pointer;
    transition: transform var(--transition-speed), box-shadow var(--transition-speed);
    box-shadow: 0 4px 10px rgba(0,0,0,0.2);

    &:hover {
      transform: translateY(-3px);
      box-shadow: 0 6px 15px rgba(0,0,0,0.3);
    }
  }
}

// Filters + Calendar Layout
.content-area {
  display: grid;
  grid-template-columns: 280px 1fr; // Fixed sidebar, flexible content
  gap: 2rem;
    max-width: 1200px;
  margin: 0 auto; // Center the content area
}

// Filters Sidebar
.filters-sidebar {
  // Inherits .card styles (background, border, shadow, padding) from global styles
  padding: 1.5rem; // Adjust padding if needed
  align-self: start; // Align to the top of the grid area
  position: sticky; // Make filters sticky below header
  top: 80px; // Adjust based on header height + desired gap
  // max-height: calc(100vh - 100px); // REMOVE height restriction
  // overflow-y: auto; // REMOVE scrollbar

  h2 {
    font-size: 1.3rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--border-color);
    color: var(--text-color);
  }

  .filter-group {
    margin-bottom: 1rem;
  }

  .filter-header {
    background: none;
    border: none;
    padding: 0.5rem 0;
    width: 100%;
    text-align: left;
    font-size: 1rem;
    font-weight: 500;
    color: var(--text-color);
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid var(--border-color);

    .arrow {
      transition: transform var(--transition-speed);
    }

    &.open .arrow {
    transform: rotate(180deg);
    }
  }

  .filter-options {
    max-height: 0;
    overflow: hidden; // Keep hidden when closed
    transition: max-height 0.3s ease-out;
    padding-left: 0.5rem; // Indent options slightly
    margin-top: 0.5rem;

    &.open {
      max-height: 40rem; // Increase max-height significantly to allow growth
      // overflow-y: auto; // REMOVE internal scrollbar
    }

  .checkbox-item {
      margin-bottom: 0.5rem;
      label {
    display: flex;
    align-items: center;
        gap: 0.5rem;
        font-weight: 400;
    cursor: pointer;
        color: var(--text-muted-color);
        &:hover {
            color: var(--text-color);
        }
      }
      input[type="checkbox"] {
        width: auto; // Override global width
    cursor: pointer;
        accent-color: var(--primary-color); // Use theme color for checkbox
      }
    }
  }

  .calendar-actions {
    margin-top: 2rem;
    border-top: 1px solid var(--border-color);
    padding-top: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .action-button {
     // Use global button styles, maybe add specific icon alignment
     display: inline-flex;
     align-items: center;
     justify-content: center;
     gap: 0.5rem;
    width: 100%;
     padding: 0.6rem 1rem;

     svg {
        width: 16px;
        height: 16px;
        stroke: var(--button-text-color);
     }
  }
  
  .export-actions {
    display: flex;
    gap: 0.5rem;
    .export-button {
      flex: 1; // Make export buttons share space
      font-size: 0.85rem;
      padding: 0.5rem;
    }
  }
  
  .export-info {
      font-size: 0.8rem;
      color: var(--text-muted-color);
      text-align: center;
  }

}

// Calendar Display Area
.calendar-display-area {
  min-width: 0; // Prevent grid blowout

  .no-exams-message {
    // Uses global .card style
    text-align: center;
    padding: 3rem 1.5rem;
    color: var(--text-muted-color);
    p {
      margin-bottom: 0.5rem;
    }
    p:first-child {
      font-size: 1.1rem;
    font-weight: 500;
      color: var(--text-color);
    }
  }

  .calendar-grid {
    display: grid;
    // Responsive columns: 1 on small, 2 on medium, 3 on large screens
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); 
    gap: 1.5rem;
  }

  .month-block {
    // Uses global .card style
    padding: 1.5rem;

    h3 {
    text-align: center;
    font-size: 1.2rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: var(--text-color);
    }
  }

  .calendar-table {
    width: 100%;
    border-collapse: collapse;

    th {
      text-align: center;
    font-weight: 500;
      color: var(--text-muted-color);
      padding-bottom: 0.5rem;
      font-size: 0.85rem;
    }

    td {
      text-align: center;
      vertical-align: middle;
      height: 40px; // Give cells fixed height
      border: 1px solid transparent; // Placeholder for potential borders

      &.is-empty {
        background-color: transparent;
      }
    }

    .calendar-day-button {
    display: flex;
        flex-direction: column; // Stack number and dot
    align-items: center;
    justify-content: center;
        width: 36px; // Fixed size button
        height: 36px;
        margin: auto; // Center button in cell
        border: none;
        border-radius: 50%; // Circular days
        background-color: transparent;
        color: var(--text-color);
        font-size: 0.9rem;
        cursor: pointer;
        position: relative;
        transition: background-color var(--transition-speed), color var(--transition-speed);
        
        &:hover {
          background-color: var(--secondary-color);
        }

        .exam-dot {
    position: absolute;
            bottom: 4px;
    left: 50%;
            transform: translateX(-50%);
            width: 5px;
            height: 5px;
    border-radius: 50%;
            background-color: var(--accent-color);
        }
    }
    
    td.has-exam .calendar-day-button {
      font-weight: 600; // Highlight days with exams
    }

    td.selected .calendar-day-button {
      background-color: var(--primary-color);
      color: var(--button-text-color);
      .exam-dot {
          background-color: var(--button-text-color); // Dot contrasts selected bg
      }
    }
  }
}

// Modal and Popup Styles (Leverage existing selectors, apply theme variables)
  .modal-overlay {
  position: fixed; // Ensure it covers viewport
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  background-color: rgba(0, 0, 0, 0.6); // Darker overlay
  display: flex !important; // Force flex display
  justify-content: center !important; // Force horizontal centering
  align-items: center !important; // Force vertical centering
  z-index: 1500; // Ensure overlay is above other content but below highest elements if needed
  }

  .auth-modal {
  // Uses global .card styles
  max-width: 450px;
    width: 90%;
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 0.75rem;
    margin-bottom: 1rem;
    h3 {
    margin: 0;
        font-size: 1.4rem;
        color: var(--text-color);
  }
  .close-modal-btn {
    background: none;
    border: none;
        font-size: 1.8rem;
        color: var(--text-muted-color);
    cursor: pointer;
        padding: 0 0.5rem;
    line-height: 1;
        &:hover {
            color: var(--error-color);
  }
  }
  }
  .form-group {
    margin-bottom: 1rem;
    label {
        // Uses global label style
        font-size: 0.9rem;
    }
    input {
        // Uses global input style
    }
  }
  .auth-buttons {
    margin-top: 1.5rem;
  .auth-btn {
    width: 100%;
       // Uses .action-button style via class binding
    }
  .auth-toggle {
        margin-top: 1rem;
    text-align: center;
    font-size: 0.9rem;
        color: var(--text-muted-color);
        a {
            // Uses global link styles
            margin-left: 0.3rem;
    font-weight: 500;
  }
    }
  }
  }

// Notification Toast (Adjusting existing style)
  .notification-toast {
    position: fixed;
    bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  padding: 1rem 1.5rem;
    border-radius: var(--border-radius);
  color: var(--button-text-color);
    font-weight: 500;
    z-index: 2000;
  box-shadow: 0 4px 15px rgba(0,0,0,0.2);

  // Use theme colors
  &.success {
    background-color: var(--success-color);
  }
  &.error {
    background-color: var(--error-color);
  }
}

// NEW Exam Tooltip Styles
.exam-tooltip {
  position: absolute;
  background-color: var(--card-background-color);
  color: var(--text-color);
  border: 1px solid var(--border-color);
  border-radius: 25px; // Pill shape
  padding: 0.75rem 1.25rem;
  box-shadow: 0 5px 15px var(--card-shadow-color);
  z-index: 1100; // Ensure tooltip is above calendar but potentially below modal
  width: 280px;
  max-width: 90vw;
  // Transitions for smooth appearance (optional)
  // transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out; 
  // opacity: 0; // Start hidden if using transitions
  // visibility: hidden;

  // &.visible { // Add this class via [ngClass] if using transitions
  //   opacity: 1;
  //   visibility: visible;
  // }

  .tooltip-content {
    max-height: 150px; // Limit height
    overflow-y: auto;
  }

  .exam-item {
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 0.75rem;
    margin-bottom: 0.75rem;

    &:last-child {
      border-bottom: none;
      margin-bottom: 0;
      padding-bottom: 0;
    }

    h4 {
      font-size: 1rem;
      font-weight: 600;
      color: var(--primary-color);
      margin-bottom: 0.3rem;
    }

    p {
      font-size: 0.85rem;
      color: var(--text-muted-color);
      margin-bottom: 0.2rem;
      strong {
        color: var(--text-color);
        font-weight: 500;
      }
    }
  }

  // Tooltip Arrow (using ::after pseudo-element)
  .tooltip-arrow {
    position: absolute;
    width: 12px;
    height: 12px;
    background-color: var(--card-background-color);
    border: 1px solid var(--border-color);
    border-bottom-width: 0;
    border-right-width: 0;
    transform-origin: center center;

    // Position arrow based on tooltip position (adjust as needed)
    // Assuming tooltip is usually ABOVE the button (transform: translate(-50%, -100%))
    bottom: -7px; // Half the height - border adjustment
    left: 50%;
    transform: translateX(-50%) rotate(45deg);
    z-index: -1; // Place behind the main tooltip body

    // Add styles if tooltip is BELOW the button (transform: translate(-50%, 0))
    // .tooltip-below & { // Need a way to detect this in TS or use different classes
    //   top: -7px;
    //   bottom: auto;
    //   transform: translateX(-50%) rotate(225deg);
    // }
  }
}

// Add Exam Popup Styles reference
// Note: app-exam-popup might need its own SCSS adjustments to use theme variables

// Responsive Adjustments
@media (max-width: 992px) {
  .content-area {
    grid-template-columns: 240px 1fr; // Slightly smaller sidebar
  }
}

@media (max-width: 768px) {
  .landing-header {
    padding: 0.5rem 1rem;
    .logo-container .header-title {
      font-size: 1.1rem;
    }
    .nav-button {
      font-size: 0.8rem;
      padding: 0.4rem 0.8rem;
    }
    .theme-toggle {
      padding: 0.4rem;
    }
  }

  .hero-section {
    padding: 3rem 1rem;
    min-height: 25vh;
    h1 {
      font-size: 2rem;
    }
    .subtitle {
      font-size: 1rem;
    }
    .cta-button {
      font-size: 1rem;
      padding: 0.7rem 1.5rem;
    }
  }

  .content-area {
    grid-template-columns: 1fr; // Stack sidebar and content
  }

  .filters-sidebar {
    position: static; // Unstick sidebar on small screens
    margin-bottom: 1.5rem;
    top: auto;
  }
  
  .calendar-grid {
       grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); 
  }
}

@media (max-width: 480px) {
    .landing-header {
        .logo-container .logo {
            height: 24px;
        }
        .logo-container .header-title {
             font-size: 1rem; // Further reduce title
        }
         .nav-button {
            padding: 0.3rem 0.6rem;
         }
    }
    
    .hero-section h1 {
        font-size: 1.8rem;
    }
    .hero-section .subtitle {
        font-size: 0.9rem;
    }
    
    .calendar-table td {
        height: 36px;
        .calendar-day-button {
            width: 32px;
            height: 32px;
            font-size: 0.8rem;
            .exam-dot {
                width: 4px;
                height: 4px;
                bottom: 3px;
            }
        }
    }
    
    .auth-modal {
        width: 95%;
    }
  }
  